# file to define the SB application properties


spring.application.name=library



# changing the server port (default tomcat - 8080)
#The default port 8080 in Spring Boot is because of Apache Tomcat, which is the default embedded server in Spring Boot applications.

server.port=9090



# database configuration:mysql

#SELECT VERSION();		-- to check mysql version
#SHOW DATABASES;
#CREATE DATABASE onlinelibrary;
#USE onlinelibrary;
#SHOW TABLES;

#for mariadb installed on ec2 deploment server:
#sudo mysql -u root
#SET PASSWORD FOR 'root'@'localhost' = PASSWORD('newpassword');
#sudo mysql -u root -p
#EXIT;

#spring.datasource.url=jdbc:mysql://3.94.121.150:3306/library    # works only for local, when running app in local and conecting db of ec2, but doesn't work if running app in ec2 and trying to connect from jenkins to ec2-2 because usually within vpc, servers are not allowed to communicated using public ip so use private alsways in same vpc.
spring.datasource.url=jdbc:mysql://172.31.80.199:3306/library

#spring.datasource.url=jdbc:mariadb://localhost:3306/library    # private ip of ec2 deployment server as jenkins server in same vpc will access it
# 172.31.80.199 - server-2 private ip
# 3.94.121.150 - server-2 public ip
#onlinelibrary is DB name

spring.datasource.username=root

#SELECT USER();

spring.datasource.password=Admin@1

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver    # for mariadb installed on ec2 deploment server


# hibernate configuration - hibernate implements jpa (make jpa works)

spring.jpa.hibernate.ddl-auto=update

#so that table will get created automatically

spring.jpa.show-sql=true

#to be able to see the query being fired
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect  # for mariadb installed on ec2 deploment server

#The value of spring.jpa.properties.hibernate.dialect depends on which database you are using. - Here, MySQL8
#Hibernate uses dialects to generate SQL statements that match the specific database. 
#Use this if your MySQL version is 8 or later.
